<snippet>
	<content><![CDATA[
#include<bits/stdc++.h>
using namespace std;

#define fo(i,n)         for(i=0; i<n; i++)
#define Fo(i,k,n)       for(i=k;k<n?i<n:i>n;k<n?i+=1:i-=1)
#define ll              long long
#define si(x)           scanf("%d", &x)
#define sl(x)           scanf("%lld", &x)
#define ss(s)           scanf("%s", s)
#define pi(x)           printf("%d\n", x)
#define pl(x)           printf("%lld\n", x)
#define ps(s)           printf("%s\n", s)
#define deb(x)          cout << #x << "=" << x << endl;
#define deb2(x, y)      cout << #x << "=" << x << "," << #y << "=" << y << endl
#define println(x)      cout << x << endl;
#define prints(x)       cout << x << " ";
#define pb              push_back
#define mp              make_pair
#define F               first
#define S               second
#define all(x)          x.begin(), x.end()
#define clr(x)          memset(x, -1, sizeof(x))
#define sortall(x)      sort(all(x))
#define tr(it, a)       for(auto it = a.begin(); it != a.end(); it++)
#define printv(v)       for(i=0;i<v.size();i++){prints(v[i]);}cout<<endl
#define PI              3.1415926535897932384626

typedef pair<int, int>  pii;
typedef pair<ll, ll>    pll;
typedef vector<int>     vi;
typedef vector<ll>      vl;
typedef vector<pii>     vpii;
typedef vector<pll>     vpll;
typedef vector<vi>      vvi;
typedef vector<vl>      vvl;

mt19937_64 rang(chrono::high_resolution_clock::now().time_since_epoch().count());

int mpow(int base, int exp); // (base^exp)%mod
// -2'147'483'648(2^31) to +2'147'483'647(2^31-1)
ll npow(ll base, ll exp); // (base^exp)
// -9'223'372'036'854'775'808(-2^63) to +9'223'372'036'854'775'807(2^63-1)

const int mod = 1e9+7;
const int N = 3e5, M = N;

//-----------------------------------------------------------------------------

void Solve_main() {
    int i, j, n, m, k;
    
}

//-----------------------------------------------------------------------------

int main() {
    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    srand(chrono::high_resolution_clock::now().time_since_epoch().count());

    int t = 1;
    cin >> t;
    while(t--) {
      Solve_main();
    }

    return 0;
}

//-----------------------------------------------------------------------------

int mpow(int base, int exp) {
    base %= mod;
    int result = 1;
    while (exp > 0) {
        if (exp & 1) result = ((ll)result * base) % mod;
        base = ((ll)base * base) % mod;
        exp >>= 1;
    }
    return result;
}

ll npow(ll base, ll exp) {
    ll result = 1;
    while (exp > 0) {
        if (exp & 1) result = (result * base);
        base = (base * base);
        exp >>= 1;
    }
    return result;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>MyTemplate</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
